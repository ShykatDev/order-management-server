generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  role       String   @default("user")
  cart       Cart?    @relation("UserCart")
  created_at DateTime @default(now())
}

model Cart {
  id         Int           @id @default(autoincrement())
  user_id    Int           @unique
  user       User          @relation("UserCart", fields: [user_id], references: [id], onDelete: Cascade)
  products   CartProduct[]
  created_at DateTime      @default(now())
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  price       Decimal
  weight      Decimal
  is_enabled  Boolean       @default(true)
  promotions  Promotion[]
  created_at  DateTime      @default(now())
  carts       CartProduct[]
  order_id    Int?
  orders      Orders?       @relation(fields: [order_id], references: [id], onDelete: Cascade)
}

model CartProduct {
  id         Int      @id @default(autoincrement())
  cart_id    Int
  product_id Int
  quantity   Int
  cart       Cart     @relation(fields: [cart_id], references: [id], onDelete: Cascade)
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())

  @@unique([cart_id, product_id])
}

model Promotion {
  id                Int           @id @default(autoincrement())
  title             String
  start_date        DateTime      @default(now())
  end_date          DateTime
  is_enabled        Boolean       @default(true)
  promotion_type_id Int
  promotion_type    PromotionType @relation(fields: [promotion_type_id], references: [id])
  discount_amount   Decimal
  products          Product[]
  created_at        DateTime      @default(now())
}

model Orders {
  id                Int         @id @default(autoincrement())
  quantity          Int
  user_id           Int
  weight_slab       WeightSlab? @relation(fields: [slab_id], references: [id], onDelete: Cascade)
  slab_id           Int?
  total_order_price Decimal
  Product           Product[]
}

model WeightSlab {
  id                Int            @id @default(autoincrement())
  min               Decimal
  max               Decimal
  amount            Decimal
  promotion_type_id Int?
  promotion_type    PromotionType? @relation(fields: [promotion_type_id], references: [id], onDelete: Cascade)
  created_at        DateTime       @default(now())
  Orders            Orders[]
}

model PromotionType {
  id         Int          @id @default(autoincrement())
  type       String       @unique
  Promotion  Promotion[]
  WeightSlab WeightSlab[]
}
